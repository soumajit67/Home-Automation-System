/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/c4424e54-f9ed-4573-a0da-4b6f8b39b15a 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float h;
  float t;
  bool b1;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include "DHT.h"
#define DHTPIN D2
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);


void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  Serial.println(F("DHT11 test !"));
  dht.begin();
  pinMode(D3,OUTPUT);
  pinMode(D5,OUTPUT);
  pinMode(D6,OUTPUT);


  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(100); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  delay(100);
  h = dht.readHumidity();
  t = dht.readTemperature();
  
  if(isnan(h)  ||   isnan(t)){
    Serial.println(F("Failed To Read From DHT Sensor !!"));
    return;
    
  }

  Serial.print(F("Humidity: "));
  Serial.print(h);
  Serial.print(F("% Temperature: "));
  Serial.print(t);
  Serial.println(F("C"));

  digitalWrite(D6,HIGH);
  digitalWrite(D5,LOW);
  delay(1);
  digitalWrite(D5,HIGH);
  digitalWrite(D6,LOW);
  

  ArduinoCloud.update();
  // Your code here 
  
  
}


/*
  Since B1 is READ_WRITE variable, onB1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onB1Change()  {
  if (b1==1)
  {
    digitalWrite(D3,HIGH);
  }
  else
  {
   digitalWrite(D3,LOW);

  }
  // Add your code here to act upon B1 change
}

/*
  Since B2 is READ_WRITE variable, onB2Change() is
  executed every time a new value is received from IoT Cloud.
*/


/*
  Since T is READ_WRITE variable, onTChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onTChange()  {
  // Add your code here to act upon T change
}

/*
  Since H is READ_WRITE variable, onHChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onHChange()  {
  // Add your code here to act upon H change
}
